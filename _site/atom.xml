<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>annotatAR</title>
 <link href="http://arebe.github.io/annotatar/atom.xml" rel="self"/>
 <link href="http://arebe.github.io/annotatar/"/>
 <updated>2015-12-18T18:39:19-05:00</updated>
 <id>http://arebe.github.io</id>
 <author>
   <name>RB</name>
   <email>rfboyce+annotatar@gmail.com</email>
 </author>

 
 <entry>
   <title>Week 15 Project Review</title>
   <link href="http://arebe.github.io/annotatar/2015/12/18/week15/"/>
   <updated>2015-12-18T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/12/18/week15</id>
   <content type="html">&lt;p&gt;Final thoughts on annotatAR and the Digital Media Capstone experience.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;creative-design-of-annotatar&quot;&gt;Creative design of annotatAR&lt;/h4&gt;

&lt;p&gt;The ubiquity of personal data collection causes a bit of anxiety, naturally, because until now the boundaries of the public and private spheres were more obvious. Today, many of our professional and personal communications are mediated by companies and technologies that the end-user does not perfectly understand. We send a lot of information through an opaque black box and we have no real reason to trust the altruism of the organizations that own the infrastructure.&lt;/p&gt;

&lt;p&gt;However, there is a flip side to all of this. Personal data is rich resource that can be harnessed to our benefit - for example, data-driven lifestyle decisions can improve one’s efficiency, happiness, and personal agency.  I also see personal data as a new artistic medium that can be utilized to communicate nuanced messages and to understand issues emerging in today’s world.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151218_timessq/Screenshot_2015-12-11-12-02-45.png&quot; alt=&quot;annotatAR at #RiseUpOctober&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With annotatAR we achieve:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Détournment or re-taking of public space with its corresponding virtual settlement&lt;/li&gt;
  &lt;li&gt;Provide an outlet for participation and action in a non-disruptive, discursive context&lt;/li&gt;
  &lt;li&gt;Amplify dissenting voices from people who are geographically and demographically diverse that unite around ideological issues&lt;/li&gt;
  &lt;li&gt;Utilize emerging web technologies like Meteor.js for non-business purposes
    &lt;ul&gt;
      &lt;li&gt;Data on the wire&lt;/li&gt;
      &lt;li&gt;Quick deployment&lt;/li&gt;
      &lt;li&gt;Participation in the development community &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;project-summary&quot;&gt;Project summary&lt;/h4&gt;

&lt;p&gt;With annotatAR, I created a &lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor.js&lt;/a&gt; mobile web application that annotates a &lt;code&gt;getUserMedia&lt;/code&gt; video stream with real-time tweets from the &lt;a href=&quot;https://dev.twitter.com/overview/documentation&quot;&gt;Twitter API&lt;/a&gt; and leverages device geolocation to map particular hashtags to lat/long coordinates. &lt;/p&gt;

&lt;p&gt;The server-side app accesses a database of hashtags with their corresponding geocoordinates, and queries the Twitter API on those hashtags. It publishes a subset of the tweet database in response to the client-side app subscription. The application directory structure is based on specifications outlined by &lt;a href=&quot;https://themeteorchef.com/snippets/organizing-your-meteor-project/&quot;&gt;The Meteor Chef&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The augmented reality portion of the website detects the device location and subscribes to the approriate data from the server, and overlays the tweet text on a full-screen view from the device camera. The end-user can take screen captures, download a CSV of the tweet data, and tweet from the website.&lt;/p&gt;

&lt;p&gt;The desktop portion of the website provides documentation on the project, and a map of the current deployments, along with several screenshots of annotatAR in action.&lt;/p&gt;

&lt;p&gt;The site is deployed on a &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;Digital Ocean&lt;/a&gt; droplet, uses an &lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;NGINX&lt;/a&gt; server with SSL certs verified by &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;. The live app is updated using the command line interface &lt;a href=&quot;https://github.com/arunoda/meteor-up&quot;&gt;Meteor Up&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can visit the live app at &lt;a href=&quot;https://annotatar.xyz&quot;&gt;annotatAR.xyz&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;future-directions&quot;&gt;Future directions&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Short-term technical improvements
    &lt;ul&gt;
      &lt;li&gt;Object-ifying tweet display and improving interactivity&lt;/li&gt;
      &lt;li&gt;Multi-channel tweet streams&lt;/li&gt;
      &lt;li&gt;Cross-browser support for Chrome&lt;/li&gt;
      &lt;li&gt;Implementation of a 3D library for AR&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Long-term affordance improvements
    &lt;ul&gt;
      &lt;li&gt;Hashtag admin interface&lt;/li&gt;
      &lt;li&gt;Sharing screenshots more broadly&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;digital-media-capstone-at-harvard-extension-school&quot;&gt;Digital Media Capstone at Harvard Extension School&lt;/h4&gt;

&lt;p&gt;This project was produced as partial requirement for the degree of &lt;a href=&quot;https://www.extension.harvard.edu/academics/graduate-degrees/digital-media-design-degree&quot;&gt;Masters of Liberal Arts in the Digital Media Design&lt;/a&gt; program at Harvard Extension School. The capstone studio class provided a supportive environment for designing and implementing a self-initiated practical project. The studio culminated in a presentation session; &lt;a href=&quot;http://slides.com/arebe/annotatarcap&quot;&gt;the slides for annotatAR are available here&lt;/a&gt;. A summary of the all of the studio projects is available in this &lt;a href=&quot;/annotatar/assets/files/capstone poster session program.pdf&quot;&gt;material for the capstone fair&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am grateful to Dr. Jeff Parker, the program director, and Jen Kramer, my capstone studio advisor, as well as all of my colleagues in the program. Thank you very much for your input, feedback, and support during this process.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 14 MUP, NGINX, HTTPS</title>
   <link href="http://arebe.github.io/annotatar/2015/12/08/week14/"/>
   <updated>2015-12-08T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/12/08/week14</id>
   <content type="html">&lt;p&gt;Deploying the Meteor app to a production webserver with NGINX and HTTPS, using &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt; CA.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;create-a-digital-ocean-droplet-for-the-app&quot;&gt;Create a Digital Ocean droplet for the app&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;create an ubuntu droplet
    &lt;ul&gt;
      &lt;li&gt;add your SSH key&lt;/li&gt;
      &lt;li&gt;networking -&amp;gt; add DNS records for the domain name &amp;amp; IP address of new droplet&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;regenerate password - will send an email&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ssh root@ipaddress&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;change password&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;apt-get update&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;apt-get install nginx&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;apt-get install git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;obtain-ssl-cert-from-lets-encrypt&quot;&gt;Obtain SSL Cert from Let’s Encrypt&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://letsencrypt.readthedocs.org/en/latest/using.html#installation&quot;&gt;Let’s Encrypt Docs&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install letsencrypt&lt;/li&gt;
  &lt;li&gt;cd to letsencrypt dir&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;./letsencrypt-auto certonly —standalone-supported-challenges tls-sni-01&lt;/code&gt;  (to use port 443)&lt;/li&gt;
  &lt;li&gt;Follow prompts to obtain cert (you might have to temporarily disable other web services - such as node - if they use port 443)&lt;/li&gt;
  &lt;li&gt;Add the certs to your nginx server config (see below)
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;set-up-nginx&quot;&gt;Set up nginx&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/example&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;sudo nano /etc/nginx/sites-available/example&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example nginx config file, from &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-deploy-a-meteor-js-application-on-ubuntu-14-04-with-nginx&quot;&gt;How To Deploy a Meteor.js Application on Ubuntu 14.04 with Nginx&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;
server_tokens off; # for security-by-obscurity: stop displaying nginx version

# this section is needed to proxy web-socket connections
map $http_upgrade $connection_upgrade {
    default upgrade;
    &#39;&#39;      close;
}

# HTTP
server {
    listen 80 default_server; # if this is not a default server, remove &quot;default_server&quot;
    listen [::]:80 default_server ipv6only=on;

    root /usr/share/nginx/html; # root is irrelevant
    index index.html index.htm; # this is also irrelevant

    server_name annotatar.xyz; # the domain on which we want to host the application. Since we set &quot;default_server&quot; previously, nginx will answer all hosts anyway.


    # redirect non-SSL to SSL
    location / {
       rewrite     ^ https://$server_name$request_uri? permanent;
    }
}

# HTTPS server
server {
    listen 443 spdy; 
    ssl on;
    server_name annotatar.xyz; # this domain must match Common Name (CN) in the SSL certificate

    root html; # irrelevant
    index index.html; # irrelevant

    ssl_certificate /etc/letsencrypt/live/annotatar.xyz/fullchain.pem; # full path to SSL certificate and CA certificate concatenated together
    ssl_certificate_key /etc/letsencrypt/live/annotatar.xyz/privkey.pem; # full path to SSL key

    # performance enhancement for SSL
    ssl_stapling on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # safety enhancement to SSL: make sure we actually use a safe cipher
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers &#39;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK&#39;;

    # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    add_header Strict-Transport-Security &quot;max-age=31536000;&quot;;

    # If your application is not compatible with IE &amp;lt;= 10, this will redirect visitors to a page advising a browser update
    # This works because IE 11 does not present itself as MSIE anymore
    if ($http_user_agent ~ &quot;MSIE&quot; ) {
        return 303 https://browser-update.org/update.html;
    }

    # pass all requests to Meteor
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # allow websockets
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
        proxy_set_header X-Forward-Proto https;

        # this setting allows the browser to cache the application in a way compatible with Meteor
        # on every applicaiton update the name of CSS and JS file is different, so they can be cache infinitely (here: 30 days)
        # the root path (/) MUST NOT be cached
        if ($uri != &#39;/&#39;) {
            expires 30d;
        }
   }
}

&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;rm /etc/nginx/sites-enabled/default&lt;/code&gt; remove default config&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ln -s /etc/nginx/sites-available/todos /etc/nginx/sites-enabled/todos&lt;/code&gt; enable vhost by linking config file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;nginx -t&lt;/code&gt; test out the config&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;nginx -s reload&lt;/code&gt; depoloy – also &lt;code&gt;service nginx startup&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu-12-04&quot;&gt;How to Create Self-signed Certs, if you dont want to use Let’s Encrypt&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;note-on-nginx-config&quot;&gt;Note on NGINX config&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;**&lt;/em&gt; &lt;code&gt;proxy_pass http://127.0.0.1:8080;&lt;/code&gt;
&lt;code&gt;:8080&lt;/code&gt; —&amp;gt; this should match the mup.json env &lt;code&gt;PORT&lt;/code&gt; (see below)&lt;/p&gt;

&lt;h4 id=&quot;mup&quot;&gt;MUP&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;install &lt;a href=&quot;https://github.com/arunoda/meteor-up&quot;&gt;MUP&lt;/a&gt; on local machine&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mup init&lt;/code&gt; —in proj directory&lt;/li&gt;
  &lt;li&gt;edit &lt;code&gt;mup.json&lt;/code&gt; config file — use password &amp;amp; ip address of droplet or ssh id&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mup setup&lt;/code&gt; —- configures remote server, run this every time the config file changes&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mup deploy&lt;/code&gt; —– run this to update app files on the remote server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example &lt;code&gt;mup.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
{
  // Server authentication info
  &quot;servers&quot;: [
    {
      &quot;host&quot;: &quot;104.236.3.79&quot;, // your droplet&#39;s IP
      &quot;username&quot;: &quot;root&quot;,
      //&quot;password&quot;: “passwordyness&quot;
      // or pem file (ssh based authentication)
      &quot;pem&quot;: &quot;~/.ssh/id_rsa&quot;
    }
  ],

  // Install MongoDB in the server, does not destroy local MongoDB on future setup
  &quot;setupMongo&quot;: true,

  // WARNING: Node.js is required! Only skip if you already have Node.js installed on server.
  &quot;setupNode&quot;: true,

  // WARNING: If nodeVersion omitted will setup 0.10.36 by default. Do not use v, only version number.
  &quot;nodeVersion&quot;: &quot;0.10.40&quot;, // Meteor requires at least 0.10.40

  // Install PhantomJS in the server
  // &quot;setupPhantom&quot;: true,

  // Show a progress bar during the upload of the bundle to the server.
  // Might cause an error in some rare cases if set to true, for instance in Shippable CI
  &quot;enableUploadProgressBar&quot;: false,

  // Application name (No spaces)
  &quot;appName&quot;: &quot;annotatar&quot;,

  // Location of app (local directory)
  &quot;app&quot;: &quot;.&quot;,

  // Configure environment
  &quot;env&quot;: {
    &quot;PORT&quot;: 3000,
    &quot;ROOT_URL&quot;: &quot;http://104.236.3.79&quot; // your droplet&#39;s IP -- don&#39;t use https, nginx will take care of routing
  },

  // Meteor Up checks if the app comes online just after the deployment
  // before mup checks that, it will wait for no. of seconds configured below
  &quot;deployCheckWaitTime&quot;: 15
}
&lt;/pre&gt;

&lt;h4 id=&quot;next-steps&quot;&gt;Next steps&lt;/h4&gt;

&lt;p&gt;Prior to deploying the app to a Digital Ocean server, I also implemented a Google Maps view of the Hashtags collection as part of the documentation page. With only a few days left, I’m working away at (mostly-stylistic) remaining tasks, and my presentation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normalizing age-til-die-off&lt;/li&gt;
  &lt;li&gt;Styling the documentation page&lt;/li&gt;
  &lt;li&gt;Using accelerometer data to change the tweet positions&lt;/li&gt;
  &lt;li&gt;Styling the tweets&lt;/li&gt;
  &lt;li&gt;Auto-selecting back-facing camera on the device &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Week 13 Subscriptions and Cursors</title>
   <link href="http://arebe.github.io/annotatar/2015/12/02/week13/"/>
   <updated>2015-12-02T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/12/02/week13</id>
   <content type="html">&lt;p&gt;Working with Meteor: automating modifications to the hashtag database.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;streamlining-the-app&quot;&gt;Streamlining the app&lt;/h4&gt;

&lt;p&gt;Originally, the implementation of Hashtag collection additions and look-up required a number of “manual” code modifications. This week, I refactored the code to leverage the &lt;a href=&quot;http://www.meteorpedia.com/read/Understanding_Meteor_Publish_and_Subscribe&quot;&gt;database functionalities in Mongo / Meteor&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Rather than publishing many versions of the Tweet database, the client-side subscription takes the relevant hashtag as an argument, and passes this to the server which then provides the appropriate publication - the tweets filtered on the appropriate hashtag. There is a fall-back defaulting to the “occupy” hashtag, if the app cannot access the geolocation of the client’s device, or if there is no hashtag paired with that location.&lt;/p&gt;

&lt;p&gt;Previously, there was a separate array to track the hashtags and make a Twitter API query - however, this was inefficient. By utilizing the functionality of the Mongo &lt;code&gt;find()&lt;/code&gt; command to return a cursor that can be used as a dynamically-updated array, the Hashtag collection now also functions as the basis for the Twitter REST API call. &lt;/p&gt;

&lt;h4 id=&quot;template-mods&quot;&gt;Template mods&lt;/h4&gt;

&lt;p&gt;I’ve also restructured the application so that Meteor appends a header HTML block with references to css and Google fonts. I based the application file structure on &lt;a href=&quot;https://themeteorchef.com/snippets/organizing-your-meteor-project/&quot;&gt;The Meteor Chef&lt;/a&gt; recommendations, resulting in a more maintainable and legible code base.&lt;/p&gt;

&lt;h4 id=&quot;stream-vs-rest&quot;&gt;Stream vs REST&lt;/h4&gt;

&lt;p&gt;This is the major decision that still needs to be made. Currently, I’m using the Twitter REST API to request the last 20 tweets for each hashtag in the database. This approach has several limitations: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dilution of the concept of merging two simultaneous, multi-sited events&lt;/li&gt;
  &lt;li&gt;Age-til-die-off is often inappropriate - this needs to be normalized per hashtag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The REST API does have a few advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Predictable number of query results&lt;/li&gt;
  &lt;li&gt;Static database once the app is running&lt;/li&gt;
  &lt;li&gt;Ensures that tweets will be present in the AR frame, even if there isn’t a lot of recent activity on the hashtag&lt;/li&gt;
  &lt;li&gt;Provides a framework for future deployment with historic tweet data (ie as part of Invisible Monument)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think the best approach is to blend the two - to make an initial REST query when the app initializes, to ensure that there is a corpus of tweets to display in the AR frame. The age-til-die-off might be normalized based on the results of the initial query. Then as the app runs, it will connect to a &lt;a href=&quot;http://www.meteorpedia.com/read/Understanding_Meteor_Publish_and_Subscribe&quot;&gt;multi-channel stream&lt;/a&gt;. Tweets will be added to the database - up to 100 per hashtag. Once the limit is reached, the database will delete the oldest tweet as each new one arrives.&lt;/p&gt;

&lt;h4 id=&quot;next-steps&quot;&gt;Next steps&lt;/h4&gt;

&lt;p&gt;The REST API has already been implemented, so implementing the stream is not mission-critical at this time. At this time I’ve got a number of pressing issues to finalize the documentation page.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Normalizing age-til-die-off&lt;/li&gt;
  &lt;li&gt;Styling the documentation page&lt;/li&gt;
  &lt;li&gt;Adding a map to the documentation page &lt;/li&gt;
  &lt;li&gt;Using accelerometer data to change the tweet positions&lt;/li&gt;
  &lt;li&gt;Styling the tweets&lt;/li&gt;
  &lt;li&gt;Deploying annotatAR on Digital Ocean&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 12 Templates and Collections</title>
   <link href="http://arebe.github.io/annotatar/2015/11/23/week12/"/>
   <updated>2015-11-23T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/11/23/week12</id>
   <content type="html">&lt;p&gt;Working with Meteor: implementing routing, templates, and geolocation. &lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;routing-troubleshooting&quot;&gt;Routing troubleshooting&lt;/h4&gt;

&lt;p&gt;As described last week, I’ve installed &lt;a href=&quot;http://iron-meteor.github.io/iron-router/&quot;&gt;Iron:Router&lt;/a&gt; to handle URL and template routing for annotatAR. Last week, I ran into an issue where the new routing scheme seemed to break the Javascript that generated the AR elements. Upon testing and inspection, I determined that it was the template rendering that caused the issue - the AR code ran before the template had fully rendered and therefore had been attempting to act on parts of the DOM that didn’t exist yet. It was an easy fix once I realized this, I put the AR script inside of a call-back function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Template.mytemplate.onRendered(function(){....})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I now have two routes for my site, the index (documentation) page and the AR page. Each has their own template.&lt;/p&gt;

&lt;h4 id=&quot;hashtag--geolocation-collection&quot;&gt;Hashtag / Geolocation collection&lt;/h4&gt;

&lt;p&gt;I’ve also implemented the hashtag lookup functionality. There is now a collection that contains each lat/long and hashtag association. Also, the server publishes a number of versions of the tweet collection, one for each hashtag in the Hashtag collection. When the client loads the page, a script looks up the hashtag and subscribe to the appropriate publication. This should be quite secure, as the client doesn’t make a special request of the server – it simply subscribes to a different publication that the server is already making available.&lt;/p&gt;

&lt;p&gt;I’ve run into a bug in implementing this system. On the server, I’d like to be able to iterate over all of the hashtags in the Hastags collection and automatically collect tweets for each one. To do so I’m using &lt;code&gt;hashtags.map()&lt;/code&gt; to call the fiber for the Twitter API. I need to be able to pass each hashtag to this fiber, and thus far I haven’t figured out how to do that without throwing an error. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var handleTweets = Meteor.bindEnvironment(function(err, data, response) {
  console.log(data);
  console.log(&quot;***********************&quot;, err, &quot;***********************&quot;);
  for(var i = 0; i &amp;lt; data.statuses.length; i++){
    Meteor.call(&quot;addTweet&quot;, data.statuses[i].text, hashtag, data.statuses[i].created_at);
  }
  
});


//**************************************************//
// ******  uncomment to turn the rest on: ****** //
hashtags.map(function(hashtag){
  Twit.get(&#39;search/tweets&#39;,
  {
   q: hashtag,
   count: 20
 }, handleTweets);

})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In prior versions of the application, &lt;code&gt;hashtag&lt;/code&gt; was scoped within the containing function for both of these calls, but now it is not. Further research on fibers might be helpful.&lt;/p&gt;

&lt;h4 id=&quot;fullscreen&quot;&gt;Fullscreen&lt;/h4&gt;

&lt;p&gt;While I was taking a break from troubleshooting the templating issue, I also worked on fullscreen for AR. This has been a tricky problem to solve - there are built-in fullscreening styles for &lt;code&gt;video&lt;/code&gt; elements, but the AR canvas is actually a series of images that are taken from the cdevice input and rendered one frame every 100ms with the tweet text overlaid. I need to scale the image to fit the device viewport, and also slice the image to fill the screen. &lt;/p&gt;

&lt;p&gt;The code needs to check if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;check if the dimensions of the video are larger than the dimensions of the viewport &lt;/li&gt;
  &lt;li&gt;check if the viewport is in portrait (height &amp;gt; width) or landscape (height &amp;lt; width)&lt;/li&gt;
  &lt;li&gt;scale the image so that the shorter dimension matches the corresponding viewport dimension&lt;/li&gt;
  &lt;li&gt;slice any extra parts from the scaled image to center it on the viewport&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve tried a few methods to do this, and nothing seems to work 100% of the time. &lt;/p&gt;

&lt;h4 id=&quot;next-steps&quot;&gt;Next steps&lt;/h4&gt;

&lt;p&gt;I’ve solved some of the major problems with annotatAR but I’ve still got a long way to go in the next couple of weeks. After fixing the bugs with the Twitter fiber and with fullscreen, I can move on to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Styling the documentation page&lt;/li&gt;
  &lt;li&gt;Adding a map to the documentation page &lt;/li&gt;
  &lt;li&gt;Using accelerometer data to change the tweet positions&lt;/li&gt;
  &lt;li&gt;Styling the tweets&lt;/li&gt;
  &lt;li&gt;Deploying annotatAR on Digital Ocean&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 11 Routing</title>
   <link href="http://arebe.github.io/annotatar/2015/11/15/week11/"/>
   <updated>2015-11-15T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/11/15/week11</id>
   <content type="html">&lt;p&gt;Learning about routing in Meteor.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;routing-in-meteor&quot;&gt;Routing in Meteor&lt;/h4&gt;

&lt;p&gt;This week I spent my time learning about how to implement URL routing using Meteor. Routing is a key functionality as it will will allow me to dynamically generate pages using URL parameters, and use different layouts for each type of page.&lt;/p&gt;

&lt;p&gt;The site architecture will be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;index&lt;/li&gt;
  &lt;li&gt;ar
    &lt;ul&gt;
      &lt;li&gt;occupyboston&lt;/li&gt;
      &lt;li&gt;invisiblemonuments&lt;/li&gt;
      &lt;li&gt;etc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The index page is the documentation site, which will be served if someone visits the main URL, with a map and link to the blog. The AR page will house the Javascript function that detects geolocation, and re-routes to the appropriate URL.&lt;/p&gt;

&lt;p&gt;There are two major routing libraries in Meteor: &lt;a href=&quot;https://atmospherejs.com/meteorhacks/flow-router&quot;&gt;Flow Router&lt;/a&gt; and &lt;a href=&quot;http://iron-meteor.github.io/iron-router/&quot;&gt;Iron:Router&lt;/a&gt;. I tried out both and ultimately decided to use Iron:router.&lt;/p&gt;

&lt;h4 id=&quot;flow-router&quot;&gt;Flow Router&lt;/h4&gt;

&lt;p&gt;This routing library is rigorously tested and was recommended by the folks at the Meteor.js meetup that I attended last month. It’s designed for client-side, non-reactive routing. The advice from the Meteor meetup was that Flow Router has a slightly steeper learning curve, but it has a design that enforces best practices - the application is unlikely to break for mysterious reasons, or work improperly. The limitation is that it must be used with another routing library for server-side routing, such as &lt;a href=&quot;https://github.com/meteorhacks/picker&quot;&gt;Picker&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;ironrouter&quot;&gt;Iron:Router&lt;/h4&gt;

&lt;p&gt;Iron Router is the best-documented router for Meteor, and also has the largest user base. What interested me in it is the extensive set of websites for getting started with the library. I tried out Flow Router and found the examples difficult to translate to my application but had success with a &lt;a href=&quot;https://www.codetutorial.io/meteor-routing-and-layout/&quot;&gt;tutorial for Iron Router&lt;/a&gt;. It also appeals to me to be able to use the same router for server-side routing, as the geolocation function will utilize a server-side route to the appropriate database of tweets. &lt;/p&gt;

&lt;p&gt;I was able to get up and running with a two-page website and Iron Router, though I am still troubleshooting some issue with the AR script.&lt;/p&gt;

&lt;h4 id=&quot;templating-and-css&quot;&gt;Templating and CSS&lt;/h4&gt;

&lt;p&gt;I’m using the standard templating language, &lt;a href=&quot;http://meteorcapture.com/spacebars/&quot;&gt;Spacebars&lt;/a&gt;, for my application, and installed the Twitter Bootstrap CSS framework.&lt;/p&gt;

&lt;h4 id=&quot;next-directions&quot;&gt;Next directions&lt;/h4&gt;

&lt;p&gt;Once I have fixed the bugs caused by the new site architecture, I will move on to creating the geolocative function for the AR page and re-routing to a sub-page that will display a particular hashtag.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 10 Archive Research</title>
   <link href="http://arebe.github.io/annotatar/2015/11/04/week10/"/>
   <updated>2015-11-04T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/11/04/week10</id>
   <content type="html">&lt;p&gt;Directions for sourcing and utilizing historical tweet data.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;r-shief-archive&quot;&gt;R-Shief Archive&lt;/h4&gt;

&lt;p&gt;One very useful source for historical social media data is the repository &lt;a href=&quot;http://r-shief.org/&quot;&gt;R-Shief&lt;/a&gt;, which has three data products: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter, Facebook, and Instagram data for the past 30 days&lt;/li&gt;
  &lt;li&gt;Twitter data from 2010-2013 on hashtags relevant to global activist events&lt;/li&gt;
  &lt;li&gt;Facebook, Youtube, and Website archives from 2008-2013&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second product is what interests me most as a potential corpus of material for annotatAR.&lt;/p&gt;

&lt;h4 id=&quot;data-format&quot;&gt;Data format&lt;/h4&gt;

&lt;p&gt;According to the website, R-Shief’s archive is accessible via their data visualization applications, where one can craft a chart and download the graphic to use. &lt;/p&gt;

&lt;p&gt;They also have an incredibly informative table of relevant hashtags, with descriptions of what each abbreviation represents. &lt;/p&gt;

&lt;p&gt;I have emailed R-Shief in the hopes that some of their archive will be available to use independently. Hopefully they will be able to provide an archive of data in JSON or CSV format that can be plugged in to the existing annotatAR architecture. &lt;/p&gt;

&lt;p&gt;Right now, annotatAR translate incoming JSON data to a MongoDB database entry. In the context of utilizing historical data, the translatation step becomes unnecessary. However, translating the data archive to a database as a one-time operation could vastly improve the performance of the mobile site.&lt;/p&gt;

&lt;h4 id=&quot;aesthetic-notes&quot;&gt;Aesthetic notes&lt;/h4&gt;

&lt;p&gt;There are many ways to interact with the more conventional object of historic record - museum exhibits, primary texts, historical re-enactments, photographs. Digital tools afford a powerful new layer of interactivity as media assets can be juxtaposed and arranged fluidly. &lt;/p&gt;

&lt;p&gt;In relation to new media object such as the annotatAR augmented reality experience, digital media affords all of the physical interactions of the mobile web: swiping, tapping, scrolling, tilting – plus animations and UI changes that can be bound to these events.&lt;/p&gt;

&lt;p&gt;There is something oddly compelling about before-and-after photos, where we see the ghosts of past photons pinned to the contemporary record. So also do the tweets form a figure of past actions and recent historicity against the ground of the familiar urban juice.&lt;/p&gt;

&lt;p&gt;One direction I’ve considered for visualizing the tweets is rendering the video stream as letters, using the tweet text colored as if it were the backgroud video. Using the tweet text as a mask for the video would provide the pivotal visual metaphor of seeing the present through the lens of the virtual past.&lt;/p&gt;

&lt;h4 id=&quot;next-steps&quot;&gt;Next steps&lt;/h4&gt;

&lt;p&gt;Test out the text masking idea using contemporary tweet data, and wait for answers from R-Shief. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Week 9 Delinquency</title>
   <link href="http://arebe.github.io/annotatar/2015/11/02/week9/"/>
   <updated>2015-11-02T00:00:00-05:00</updated>
   <id>http://arebe.github.io/2015/11/02/week9</id>
   <content type="html">&lt;p&gt;Overthinking and under-doing in October. Next steps.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;how-i-spent-october&quot;&gt;How I spent October&lt;/h4&gt;

&lt;p&gt;I’ve had a very fruitful October. Unfortunately, this activity has not been focused on my own projects and thus annotatAR has been left on the wayside for far too long.&lt;/p&gt;

&lt;p&gt;While I’ve been a bit delinquent in updating both this project blog and working on the project itself, I have accomplished much rumination on the final outcome for this project. &lt;/p&gt;

&lt;p&gt;I somewhat switched focus at the beginning of October, and began to think of the project as a sort of meta-documentation tool whose primary end-user would be me. This focus hasn’t sat well with me though, as the spirit of the project has been to build experientially what has already been ongoing virtually.&lt;/p&gt;

&lt;p&gt;Many questions remain to be answered:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Who is the audience for the mobile site? &lt;/li&gt;
  &lt;li&gt;In what context will they discover it?&lt;/li&gt;
  &lt;li&gt;Will the site display current or historic tweets?&lt;/li&gt;
  &lt;li&gt;What controls will the end user have over the tweets being display?&lt;/li&gt;
  &lt;li&gt;Will the website generate a database of tweet data?&lt;/li&gt;
  &lt;li&gt;Will multiple hashtags be available at a particular location?&lt;/li&gt;
  &lt;li&gt;Will the end user be able to change tweets?&lt;/li&gt;
  &lt;li&gt;Will there be an administrative site where an admin can set up a new database entry for a geolocation / hashtag pairing?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will attempt to clarify my thinking on these topics in this post.&lt;/p&gt;

&lt;h4 id=&quot;audience&quot;&gt;Audience&lt;/h4&gt;

&lt;p&gt;My current thinking on the purpose of annotatAR is to fully embrace the art project aspect. Rather than thinking that this project is a tool to make other works, I would like to present it as a work in itself, a generative social media artwork. &lt;/p&gt;

&lt;p&gt;In this case, the audience / end user becomes those interested in radical use of digital spaces, Twitter and social media, and contemporary activist movements.&lt;/p&gt;

&lt;p&gt;The limitations of this direction are that the primary purpose is no longer documentation of an event in process. The Twitter stream API will likely not be useful - it will be necessary to utilize historic tweet data, such as has been gathered by Occupy Research.&lt;/p&gt;

&lt;h4 id=&quot;context&quot;&gt;Context&lt;/h4&gt;

&lt;p&gt;The working context for annotatAR will be a digital exhibition of some kind, where the audience finds out about the work through some third party - much like the Invisible Monument project. The artwork will be available for a specified timeframe during which someone can go to the appropriate location and experience the augmented reality app on their Android mobile device. &lt;/p&gt;

&lt;p&gt;This work might be highlighted in a launch event or tour of some kind. Once annotatAR has a first version, I can begin to look at fellowships and opportunities to take the project further and share it with communities.&lt;/p&gt;

&lt;h4 id=&quot;stream-vs-rest-vs-historic&quot;&gt;Stream vs REST vs Historic&lt;/h4&gt;

&lt;p&gt;The Twitter API has two versions: the stream which affords access to real-time data as it is posted - and the REST version that allows queries based on various parameters.&lt;/p&gt;

&lt;p&gt;For the conceptual purposes of this project, the stream is ideal, as it expresses the contemporality of dual sites:  online and in the “juice” of physical space. However, the stream depends highly the volume of tweets being generated in a given timeframe; if the event is generating a low level of interest on Twitter, than annotatAR will have sparse data to work with and be less effective as a visual presentation. &lt;/p&gt;

&lt;p&gt;My deployment at the Invisible Monument launch utilized a blend of REST and stream in order to overcome the limitations of the stream API. &lt;/p&gt;

&lt;p&gt;As the purpose of annotatAR has solidified around an experiential artwork, it becomes imperative to use Twitter API in a way that best expresses concept of the piece. The idea of synesthesia becomes an important concept - as we walk through the juice, the ideas and social sites of Twitter are invisible but present. annotatAR interacts with the visual sense to encode the virtual component of a multi-sited co-occurring event.&lt;/p&gt;

&lt;p&gt;The use of historic data, where it exists, affords a slightly different expression of this co-occurrence. Instead of expressing contemporality, the visual metaphor would be more archeological in tone - that of unearthing and re-experiencing an event in the past, like an historical marker expressed in virtuality.&lt;/p&gt;

&lt;h4 id=&quot;hashtag--geolocation&quot;&gt;Hashtag / Geolocation&lt;/h4&gt;

&lt;p&gt;Should multiple hashtags be associated with a specific geolocation? &lt;/p&gt;

&lt;p&gt;So doing might dilute the strength of the connection between a juice space and a twitter hashtag settlement - but it would also afford a more nuanced understanding of historicity of a space.&lt;/p&gt;

&lt;h4 id=&quot;end-user-controls&quot;&gt;End user controls&lt;/h4&gt;

&lt;p&gt;Given the above discussion, the end user will have some minimal controls - to select a hashtag (if there are multiple available at the geolocation), to pan around, to take a screenshot, and to scroll through time.&lt;/p&gt;

&lt;h4 id=&quot;desktop-site&quot;&gt;Desktop site&lt;/h4&gt;

&lt;p&gt;The desktop site will be quite minimal - a brief description of the project and map of the geolocations available. A sign-up for newsletter of project updates. &lt;/p&gt;

&lt;h4 id=&quot;questions&quot;&gt;Questions&lt;/h4&gt;

&lt;p&gt;What historic tweet data is available? - this needs to be answered ASAP to properly scope this and future versions.&lt;/p&gt;

&lt;p&gt;Future directions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Funding for a tweet aggregation service such as GNIP&lt;/li&gt;
  &lt;li&gt;Development of a robust administrative layer&lt;/li&gt;
  &lt;li&gt;Development of a way to share screen captures &lt;/li&gt;
  &lt;li&gt;Integration with the Invisible Monument project (iOS)&lt;/li&gt;
  &lt;li&gt;Development of a robust data collection system to gather data on contemporary events&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More immediate goals for annotatAR (still) include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bug fixing - hashtags on the stream seemed not to work on the website (though the stream worked on the local version)&lt;/li&gt;
  &lt;li&gt;Fluid accelerometer use&lt;/li&gt;
  &lt;li&gt;URL routing for hashtag display&lt;/li&gt;
  &lt;li&gt;Automation or parameterization of annotatAR UX elements (ie age til die-off)&lt;/li&gt;
  &lt;li&gt;Pulling in historic tweets from Occupy Research (or other source)&lt;/li&gt;
  &lt;li&gt;Single-page desktop site&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Week 5 Invisible Monument</title>
   <link href="http://arebe.github.io/annotatar/2015/10/02/week5/"/>
   <updated>2015-10-02T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/10/02/week5</id>
   <content type="html">&lt;p&gt;Outcomes from deployement at Invisible Monument launch event in Boston.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;lead-up-to-deployment&quot;&gt;Lead up to deployment&lt;/h4&gt;

&lt;p&gt;In the past week, I had a development push to meet the development goals that were most important to be able to demonstrate annotatAR’s utility as a docmentation tool. I met those goals for the most part. I was able to implement:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Typography and color changes for better legibilty&lt;/li&gt;
  &lt;li&gt;Stripping the tweet text of URLs&lt;/li&gt;
  &lt;li&gt;Screen capture button to save an image of the &lt;code&gt;canvas&lt;/code&gt; element&lt;/li&gt;
  &lt;li&gt;Panning with accelerometer data - incomplete implementation&lt;/li&gt;
  &lt;li&gt;Integrating stream and REST Twitter API data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally, I want to use accelerometer data from the device to allow the end user to pan around - to change the position of the tweets to create the illusion that they are positioned in three dimensional space. While I wasn’t able to achieve a reliable 3D effect, I started to experiment with the &lt;code&gt;ondevicemotion&lt;/code&gt; JavaScript event, and &lt;code&gt;accellerationIncludingGravity&lt;/code&gt; on the X and Y axes. While I was able to achieve somewhat fluid UX on my laptop, the calibration did not translate properly to my Galaxy 4G device.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_00.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;invisible-monument&quot;&gt;Invisible Monument&lt;/h4&gt;

&lt;p&gt;The Invisible Monument launch event, #LuncheonOnTheGrass took place on 30 Sept 2015, in Dewey Square, Boston. &lt;a href=&quot;http://invisiblemonument.com/&quot;&gt;Invisible Monument&lt;/a&gt; is a locative sound installation created by Halsey Burgund and Lara Baladi, that cn be experienced using an iOS application. Various sond elements are triggered by geolocations around Dewey Square. &lt;/p&gt;

&lt;p&gt;I met the team on site for the launch event and started taking screen captures with annotatAR. I used three different Twitter tags: #occupy, #the99, and #luncheononthegrass. I adjusted the “die-off” rate for each of the tweets according to how often the tag was used. As the tweets get older, they become smaller and more transparent. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_01.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_02.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_03.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_04.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_05.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_06.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_07.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20151002_invisible/invisible_screenshot_20150930_08.png&quot; alt=&quot;annotatAR at #LuncheonOnTheGrass&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;historic-tweets&quot;&gt;Historic tweets&lt;/h4&gt;

&lt;p&gt;I would like to be able to overlay historic tweet data as well as current tweets. However, the &lt;a href=&quot;https://dev.twitter.com/rest/public/search&quot;&gt;Twitter REST API&lt;/a&gt; allows access to tweets created within the past couple of weeks only.&lt;/p&gt;

&lt;p&gt;Third-party services such as &lt;a href=&quot;https://gnip.com/&quot;&gt;GNIP&lt;/a&gt; are social media brokers from which you can purchase historic data. The base rate for historic tweet data starts at $1.1k and increased depending on length of time and number of tweets returned by the query. &lt;/p&gt;

&lt;p&gt;While this is cost-prohibitive for the time being, it does add a layer of utility to annotatAR. I have already implemented the ability to download the database of tweets as a CSV file, which could be quite useful in capturing an independent record of a hashtag.&lt;/p&gt;

&lt;p&gt;Additionally, I spoke to one of the participants in #LuncheonOnTheGrass who directed me to an archive of tweets from the Occupy movement, available at &lt;a href=&quot;http://occupyresearch.net/&quot;&gt;Occupy Research&lt;/a&gt; and &lt;a href=&quot;http://r-shief.org/&quot;&gt;R-Shief&lt;/a&gt;. These might be a useful corpus to draw on in future iterations. &lt;/p&gt;

&lt;h4 id=&quot;future-of-invisible-monument&quot;&gt;Future of Invisible Monument&lt;/h4&gt;

&lt;p&gt;Lara and team were quite excited by the output from annotatAR, and will use my documentation of #LuncheonOnTheGrass as part of the ongoing archive for Invisible Monument / Vox Populi. &lt;/p&gt;

&lt;p&gt;We began to discuss how annotatAR might be integrated with Halsey’s &lt;a href=&quot;http://www.roundware.org/&quot;&gt;Roundware&lt;/a&gt; platform, to provide an integrated experience with the audioscape. Future directions for Invisible Monument are quite exciting, and I hope to continue to work with them. However, I think this will only be possible of Halsey ports Roundware to Android or the mobile web.&lt;/p&gt;

&lt;h4 id=&quot;near-term-goals&quot;&gt;Near term goals&lt;/h4&gt;

&lt;p&gt;More immediate goals for annotatAR include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bug fixing - hashtags on the stream seemed not to work on the website (though the stream worked on the local version)&lt;/li&gt;
  &lt;li&gt;Bug fixing - houston doesn’t seem to work, maybe due to special characters?&lt;/li&gt;
  &lt;li&gt;Fluid accelerometer use&lt;/li&gt;
  &lt;li&gt;URL routing for hashtag display&lt;/li&gt;
  &lt;li&gt;Automation or parameterization of annotatAR UX elements (ie age til die-off)&lt;/li&gt;
  &lt;li&gt;Capturing additional tweet data (ie user, associated photos) for posterity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once these goals are achieved it may be time to turn to text analysis and a desktop site.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 4 Scope and Usability</title>
   <link href="http://arebe.github.io/annotatar/2015/09/23/week4/"/>
   <updated>2015-09-23T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/23/week4</id>
   <content type="html">&lt;p&gt;Revisiting the project goals, scope, and affordances.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;reorienting&quot;&gt;Reorienting&lt;/h4&gt;

&lt;p&gt;Last Fall, I has the opportunity to work with the talented &lt;a href=&quot;http://docshop.space&quot;&gt;DocShop&lt;/a&gt; team on an experimental event called &lt;a href=&quot;http://docshop0.tumblr.com/&quot;&gt;Notes from El Saniyya&lt;/a&gt; in which we worked with artist Lara Baladi to prototype her ongoing &lt;a href=&quot;http://www.tahrirarchives.com/&quot;&gt;Vox Populi&lt;/a&gt; project. This ambitious work is an interactive multimedia archive of the Arab Spring, specifically the Egyptian Revolution of 2011. The experience of working with archival material in a socially-aware setting has been a deep inspiration for annotatAR and its design goals.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/132129973?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;600&quot; height=&quot;337&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/132129973&quot;&gt;Vox Populi, Archiving a Revolution in the Digital Age&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/user41572927&quot;&gt;Lara Baladi&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was with great excitement that I received an email from Lara last week, with news of the next iteration of the project: a picnic in Dewey Square to commemorate the anniversary of &lt;a href=&quot;http://www.occupyboston.org/&quot;&gt;Occupy Boston&lt;/a&gt;, a collective protest and re-settlement of public space that occurred from September 30 - December 10, 2011 in solidarity with &lt;a href=&quot;http://occupywallst.org/&quot;&gt;Occupy Wall Street&lt;/a&gt; and other &lt;a href=&quot;https://en.wikipedia.org/wiki/Occupy_movement&quot;&gt;Occupy movements&lt;/a&gt; around the world.&lt;/p&gt;

&lt;p&gt;Lara is excited to utilized annotatAR as part of the commemorative picnic, and we are in the process of hashing out the details for incorporating my software. However, the overall goals and aesthetic of her event require some re-thinking of how to best to incorporate annotatAR as a digital tool. We’ve agreed that at this point it would be best to use annotatAR as a documentation tool rather than deploying it as a full-fledged augmented reality experience. &lt;/p&gt;

&lt;h4 id=&quot;goals-for-the-picnic&quot;&gt;Goals for the picnic&lt;/h4&gt;

&lt;p&gt;September 30 is approaching rapidly, and I’d really like to be able to utilize annotatAR to the fullest extent. My experience at the Internet Yami-Ichi was that, while the mechanics worked, there are many aesthetic improvements to be made.&lt;/p&gt;

&lt;p&gt;New focal points include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Legibility of the tweet text through typography and color palette&lt;/li&gt;
  &lt;li&gt;Resolution of video&lt;/li&gt;
  &lt;li&gt;Screen capture &lt;/li&gt;
  &lt;li&gt;Switching between several hashtags &lt;/li&gt;
  &lt;li&gt;Displaying tweets from 2011 to capture the historicity of the current event&lt;/li&gt;
  &lt;li&gt;Filtering out URLs that clutter the image with illegible content&lt;/li&gt;
  &lt;li&gt;Locating the tweets in a 3D space to further spread them out and increase legibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;post-picnic-content&quot;&gt;Post-picnic content&lt;/h4&gt;

&lt;p&gt;Once we have screenshots created with annotatAR the next step is to generate an expressive media object using these images. Perhaps this takes the form of a multi-media collage. &lt;/p&gt;

&lt;p&gt;I’d like to incorporate text visualization from the tweets for a multi-modal presentation, as an interactive website along with static images and video. The end-user has become the archival artist (such as myself and Lara) and ultimately the general public. In this case success can be assessed by determining reactions of the audience, if the work elicits a sense of historicity and participation, and an emotive reaction. I believe this work also helps me process my experience of participating in Occupy, and commemorating it in an official capacity is an opportunity to orient my own experiences within a global context. My goal for this project is to do the same for other participants in Occupy - as well as provide a touchstone for folks who are interested in contemporary protest movements.&lt;/p&gt;

&lt;h4 id=&quot;usability-and-scope&quot;&gt;Usability and scope&lt;/h4&gt;

&lt;p&gt;This new orientation for annotatAR focuses more on the output of screenshots than usability in the sense of affordances to a naive end-user. Geolocation is unnecessary for this iteration and cross-browser and -platform compatibility become irrelevant.&lt;/p&gt;

&lt;p&gt;Narrowing the scope of the project to a known and tested platform (Firefox on a Galaxy 4G smart phone) makes the project more manageable and provides a clear direction for design decisions. Geolocative and “on-boarding” affordances of the UI are features that can wait until the visual design has been refined.&lt;/p&gt;

&lt;h4 id=&quot;further-planning&quot;&gt;Further planning&lt;/h4&gt;

&lt;p&gt;As I continue to work with Lara and the DocShop team to prepare for the event, I believe more design ideas will surface. I expect that the next week will be full of challenges, brainstorming, and new ideas.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Week 3 Beta Testing at NYC Internet Yami-Ichi</title>
   <link href="http://arebe.github.io/annotatar/2015/09/14/week3a/"/>
   <updated>2015-09-14T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/14/week3a</id>
   <content type="html">&lt;p&gt;In which we visit the internet black market and take some screenshots.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/brian_esser_yaminyc.jpg&quot; alt=&quot;NYC Internet Yami-Ichi (photo credit to Brian Esser)&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;preparation&quot;&gt;Preparation&lt;/h4&gt;

&lt;p&gt;I was tipped off to the existence of the &lt;a href=&quot;http://yami-ichi.biz/nyc/&quot;&gt;NYC Internet Yami-Ichi&lt;/a&gt; by some colleagues from &lt;a href=&quot;http://itp.nyu.edu/camp2015/&quot;&gt;ITP Camp at NYU&lt;/a&gt;. The event began in Japan and is devoted to the extrapolation of everything “internet-ish” into the real world. Due to my interest in net art and utilizing online interactions as an artistic medium, I was immediately interested in participating. It also seemed like an excellent place for the first test of annotatAR in the wild.&lt;/p&gt;

&lt;p&gt;I set the bar for the beta-test fairly low - the key here would be to see how and if people utilized the core functionality of tweets displayed on a real-time &lt;code&gt;getUserMedia&lt;/code&gt; video feed. I deployed a test version of the app on Meteor’s test server. The Meteor platform proved itself useful in this regard: it was quite easy to deploy multiple versions from the same code base by simply changing the URL in the &lt;code&gt;meteor deploy&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;annotatAR achieved the minimal viable test build plus a few extra features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;geolocation (coordinates and accuracy) was displayed below the video feed - for testing purposes only&lt;/li&gt;
  &lt;li&gt;tweet data was displayed in decresing font size - the age of the tweet was linearly mapped to the font scale - tweets appeared as 50px in size and decreased down to 5px over the course of 8 hours&lt;/li&gt;
  &lt;li&gt;the databse stores the hashtag for the search that generates each the tweet&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;survey&quot;&gt;Survey&lt;/h4&gt;

&lt;p&gt;I also designed a brief user feedback survey and posted it on Google Forms. I also made a paper version (which is what I ended up utiliting in situ).&lt;/p&gt;

&lt;p&gt;The survey captures whether or not the video and tweet functions work, information about th edevice &amp;amp; browser, and some open-ended questions.&lt;/p&gt;

&lt;h4 id=&quot;internet-yami-ichi-deployment&quot;&gt;Internet Yami-Ichi Deployment&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;http://annotatar_yaminyc.meteor.com&quot;&gt;#yaminyc app&lt;/a&gt; was deployed the night before the event, and targeted at the Twitter hashtag “#yaminyc” where a couple of folks had already begun to interact. &lt;/p&gt;

&lt;p&gt;I acheived two separate user tests during the event. One was successful and generated some great feedback regarding next directions for the UI: a “selfie” mode, screencapture interface button, and an animated GIF generator. The second test was not as successful - it was an iPhone and it seemed that the phone did not ask the user for permission to connect to the &lt;code&gt;getUserMedia&lt;/code&gt; device at all. This may be a significant issue going forward, if iPhone defaults interfere with this browser funcitonality.&lt;/p&gt;

&lt;p&gt;I also took a number of screenshots at the event. It is quite an expressive way of documenting this type of gathering - one gets a sense of a crowd of virtual eavesdropping entities. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_00.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_01.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_02.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_03.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_04.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_05.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_06.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_07.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_08.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_09.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_10.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/20150912_yaminyc/annotatar_yaminyc_20150912_11.png&quot; alt=&quot;annotatAR at NYC Internet Yami-Ichi&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;lessons&quot;&gt;Lessons&lt;/h4&gt;

&lt;p&gt;I think that annotatAR was quite effective in achieving the union of virtual and real space in an expressive way. &lt;/p&gt;

&lt;p&gt;I was a bit frustrated with the quality of the web camera picture, I wonder if anything can be done to improve it.&lt;/p&gt;

&lt;p&gt;I’m also brainstorming about the next level of the project: the desktop site. Perhaps it should be a focal point for sharing screenshots, or perhaps the screenshots could be utilized in a larger work of some kind. I now have a databse of tweets from an event to experiment with, as a corpus for text analysis.&lt;/p&gt;

&lt;p&gt;I’m a bit concerned about the &lt;a href=&quot;http://iswebrtcreadyyet.com/&quot;&gt;failure of iOS&lt;/a&gt; to connect to the WebRTC protocol, which I was not expecting since it is supported by the versions of Firefox and Chrome that are on the iPhone device thtat was tested. I will address this in my upcoming post on scoping for compatibility and audience. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Week 2 Feedback and Learning</title>
   <link href="http://arebe.github.io/annotatar/2015/09/13/week2/"/>
   <updated>2015-09-13T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/13/week2</id>
   <content type="html">&lt;p&gt;In which annotatAR undergoes critique by two fellow capstone students, RB converses with Jen Kramer, and preparation is underway for the first beta deployment.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;check-in-with-jen&quot;&gt;Check-in with Jen&lt;/h4&gt;

&lt;p&gt;Call with Jen K was super helpful in thinking about next steps for the design and how to justify decisions with demographics and user personas. It was great to have a chat about high-level project goals, and it was super helpful start to think about deliverables in terms of the December presentations. &lt;/p&gt;

&lt;p&gt;We reviewed the rubric and I’m going to revisit it in light of our conversation; the main advice was to try to define the criteria as specifically as possible so we are on the same page about the final deliverables. I will spend s bit of time thinking through the aesthetic qualities that are most important. Similarly, I will work to define a specific use-case for device compatibility and narrow the scope to what makes the most sense for the target audience demographic.&lt;/p&gt;

&lt;h4 id=&quot;feedback-from-pat--peg&quot;&gt;Feedback from Pat &amp;amp; Peg&lt;/h4&gt;

&lt;p&gt;My group members provided copius and helpful feedback - I think it really helped that I asked a couple of specific but somewhat open-ended questions in my video :) The main areas where I hoped to receive suggestions were user experience and scaling the project down the road. Overall, I’m hearing that a simple interface for the mobile site is preferable - the tweets should be obvious and contrasting. Scaling could go in various directions - Pat had some suggestions about devices which I will consider when I revisit my grading rubric. I look forward to incorporating the thoughtful ideas that Peg and Pat have shared with me.&lt;/p&gt;

&lt;h4 id=&quot;learning-meteor&quot;&gt;Learning Meteor&lt;/h4&gt;

&lt;p&gt;I went to a Meteor meet-up in New York and met some awesome Meteor folks. I learned about &lt;a href=&quot;https://www.discovermeteor.com/&quot;&gt;Discover Meteor&lt;/a&gt;, the guide to getting started. I also learned about how Meteor handles authorization and authentication, why you might want to render views on the server (which is functionality that will part of the next release of Meteor), and also heard about the Meteor package &lt;a href=&quot;https://atmospherejs.com/houston/admin&quot;&gt;houston&lt;/a&gt; for implementing a database UI. &lt;/p&gt;

&lt;p&gt;In preparing for the beta deployment at the &lt;a href=&quot;http://yami-ichi.biz/nyc/&quot;&gt;Internet Yami-Ichi NYC&lt;/a&gt;, I realized that an HTML5 game engine might be a suitable platform for displaying the tweet database. Such a mobile framework wold handle the canvas on the mobile app - something as simple as resizing the video to fit the screen seems needlessly complex to code from scratch. So I’m seeking a mobile-first render engine. Some candidates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pixijs.com/&quot;&gt;Pixi.js&lt;/a&gt; - a 2D webgl renderer&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://phaser.io&quot;&gt;Phaser&lt;/a&gt; - HTML 5 game framework that’s (previously) based on Pixi&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://famous.org/&quot;&gt;Famous&lt;/a&gt; - js library for animations &amp;amp; interfaces (not as much doc)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;looking-ahead-this-week&quot;&gt;Looking ahead this week&lt;/h4&gt;

&lt;p&gt;The upcoming week, I will develop a user persona based on the demographics of twitter users, sketch out the app database design, and mock up the UI for the mobile site.&lt;/p&gt;

&lt;p&gt;I’ll also be posting a recap of this weekend’s beta test as its own post.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Week 1 Summer Progress</title>
   <link href="http://arebe.github.io/annotatar/2015/09/04/week1/"/>
   <updated>2015-09-04T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/04/week1</id>
   <content type="html">&lt;p&gt;In which our hero recounts the details of this summer’s work….&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;user-interaction-paradigm&quot;&gt;User interaction paradigm&lt;/h4&gt;

&lt;p&gt;annotatAR was inspired by a project I worked on in Fall 2014, &lt;a href=&quot;http://docshop0.tumblr.com/&quot;&gt;Notes from El Saniyya&lt;/a&gt;. As part of &lt;a href=&quot;http://docshop.space/&quot;&gt;DocShop at metaLab&lt;/a&gt;, I worked with Egyptian artist Lara Baladi to create a prototype of a living timeline of the Arab Spring. The &lt;em&gt;Notes…&lt;/em&gt; event was highly participatory and we wondered what the next steps for engaging with a multi-media archive might be like.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You walk into a gallery space, with a curved wall with a huge timeline, each point on the timeline is an event in the Arab Spring / Tahrir Square 21 days. you want to add your own comment to the timeline, reacting to something on the timeline that triggered a memory or emotion - given any possible technology or material, how would you leave a message?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is motivation for utilizing an augmented reality platform, and Twitter as a common social interface.&lt;/p&gt;

&lt;h4 id=&quot;meteor&quot;&gt;Meteor&lt;/h4&gt;

&lt;p&gt;The major accomplishment achieved this summer was getting started with &lt;a href=&quot;http://docs.meteor.com/#/full/&quot;&gt;Meteor.js&lt;/a&gt;. After reading docs and going through an example project tutorial, I was convinced that this was the technology on which I should build annotatAR. What first drew me to Meteor is the ability to code everything in Javascript, the active community, and the well-designed forward-looking codebase. I sat with a friend for an informational session to learn about how to utilize &lt;a href=&quot;https://www.eventedmind.com/feed/meteor-what-is-meteor-bindenvironment&quot;&gt;asynchronous external requests&lt;/a&gt; in Meteor, through &lt;a href=&quot;https://meteorhacks.com/fibers-eventloop-and-meteor&quot;&gt;fibers&lt;/a&gt; and &lt;code&gt;Meteor.bindEnvironment&lt;/code&gt;. I’m starting to see even more value in how Meteor encourages code modularization, which may be quite helpful as the project develops.&lt;/p&gt;

&lt;h4 id=&quot;alpha-site&quot;&gt;Alpha site&lt;/h4&gt;

&lt;p&gt;With my newly acquired knowledge of Meteor, I built a test application called &lt;em&gt;truthtweets&lt;/em&gt;, which connects to the &lt;a href=&quot;https://dev.twitter.com/streaming/public&quot;&gt;Twitter Firehose API&lt;/a&gt; and overlays tweet texts that utilize the hashtag &lt;em&gt;#truth&lt;/em&gt; onto a video stream from &lt;code&gt;getUserMedia&lt;/code&gt; element. Voilà!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/annotatar/assets/images/screencap_20150904.png&quot; alt=&quot;truthtweets app&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;next-directions&quot;&gt;Next directions&lt;/h4&gt;

&lt;p&gt;In the short term, the mobile application has a number of refinements to be achieved:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;strike&gt;twitter api config file - untracked (not shared on github)&lt;/strike&gt;
    &lt;p&gt;done! - now using settings.json&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;resize navigator to fit device screen&lt;/li&gt;
  &lt;li&gt;use accelerometer data to detect motion and update tweet position&lt;/li&gt;
  &lt;li&gt;turn the stream on and display new tweets&lt;/li&gt;
  &lt;li&gt;change alpha based on tweet createdAt&lt;/li&gt;
  &lt;li&gt;deploy to meteor cloud or other web server&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;what if tweets became colored to reflect the background video feed? - lexigraph&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;looking-ahead-this-month&quot;&gt;Looking ahead this month&lt;/h4&gt;

&lt;p&gt;My first &lt;a href=&quot;/annotatar/2015/09/02/milestones&quot;&gt;project milestone&lt;/a&gt; will be next week, when I deploy a beta version of the application on a live server and test it at the &lt;a href=&quot;http://yami-ichi.biz/nyc/&quot;&gt;New York City Internet Yami-Ichi&lt;/a&gt; event by giving the URL out to a (small) number of attendees. This early-stage test will be crucial in refining the user interactions and aesthetics. In addition to the application itself, I will design a brief Google forms survey to collect UX feedback.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Capstone Project Grading Rubric</title>
   <link href="http://arebe.github.io/annotatar/2015/09/03/grading/"/>
   <updated>2015-09-03T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/03/grading</id>
   <content type="html">&lt;p&gt;As part of this week’s assignments, I have developed a grading rubric for annotatAR, for the scope of this fall’s Capstone Design Studio. This rubric has six dimensions, with three criteria each. The dimensions are categorized in two sub-sections: &lt;em&gt;Mobile Site&lt;/em&gt; and &lt;em&gt;Desktop Site&lt;/em&gt;. The points are weighted to emphasize the &lt;em&gt;Mobile Site&lt;/em&gt;, with a total possible score of 27 points.&lt;/p&gt;

&lt;hr /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;em&gt;Mobile Site (18pts total)&lt;/em&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Excellent (6pts)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Competent (4pts)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Needs Work (1pt)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Functionality&lt;/strong&gt; :: Users can overlay tweets on a video stream; Device compatibility;  Geolocative;  Users can take screenshot&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 3/4 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt;= 3 requirements&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Aesthetics&lt;/strong&gt; :: Tweet metadata is visually encoded; Tweet position changes with device motion; Appealing visual design&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 2/3 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt;= 2 requirements&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Scalability&lt;/strong&gt; :: Deployable at a variety of events; Github repo + documentation for further development&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 1/2 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt; 1 requirement&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;em&gt;Desktop Site (9pts total)&lt;/em&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Excellent (3pts)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Competent (2pts)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Needs Work (1pt)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Functionality&lt;/strong&gt; :: Users can view event-specific video with tweet overlay; Cross-browser compatibility&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 1/2 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt; 1 requirement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Aesthetics&lt;/strong&gt; :: Tweet metadata is visually encoded; Timeline of event is expressed visually&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 1/2 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt; 1 requirement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Scalability&lt;/strong&gt; :: Deployable for multiple events; Integrates with other social media feeds&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets all requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets 1/2 requirements&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Meets &amp;lt; 1 requirement&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Capstone Project Milestones</title>
   <link href="http://arebe.github.io/annotatar/2015/09/02/milestones/"/>
   <updated>2015-09-02T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/09/02/milestones</id>
   <content type="html">&lt;p&gt;As part of this week’s set of assignments, I have revisited the project milestones for annotatAR this fall. &lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;beta-test-at-the-nyc-internet-yami-ichihttpyami-ichibiznyc&quot;&gt;Beta-test at the &lt;a href=&quot;http://yami-ichi.biz/nyc/&quot;&gt;NYC Internet Yami-Ichi&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;12 Sept 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mobile site deployed on a live server&lt;/li&gt;
  &lt;li&gt;Displays tweet stream overlaid on &lt;code&gt;getUserMedia&lt;/code&gt; element&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;device-sensing&quot;&gt;Device sensing&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;30 Sept 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Geolocation-aware&lt;/li&gt;
  &lt;li&gt;Access device accelerometer data&lt;/li&gt;
  &lt;li&gt;Map tweet position to 3D model&lt;/li&gt;
  &lt;li&gt;Determine whether or not to compile to native app(s)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;aesthetic-refinements-on-mobile&quot;&gt;Aesthetic refinements on mobile&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;16 Oct 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Style tweets based on timestamp&lt;/li&gt;
  &lt;li&gt;Screenshot functionality&lt;/li&gt;
  &lt;li&gt;User testing of mobile&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;desktop-site-minimum-viable-product&quot;&gt;Desktop site minimum viable product&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;30 Oct 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Display video from event with tweets overlaid&lt;/li&gt;
  &lt;li&gt;User testing of desktop&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;desktop-site-refinements&quot;&gt;Desktop site refinements&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;20 Nov 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Text analysis (some or all of the following):
    &lt;ul&gt;
      &lt;li&gt;Sentiment analysis&lt;/li&gt;
      &lt;li&gt;Keyword parsing&lt;/li&gt;
      &lt;li&gt;Spatial and/or color encoding&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scrub / navigate on time dimension&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;platform-scalability&quot;&gt;Platform scalability&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;04 Dec 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Github repo with description and instructions for deployment&lt;/li&gt;
  &lt;li&gt;Integrate with existing social media (share buttons)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;bonus-features&quot;&gt;Bonus features&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;11 Dec 2015&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User interface for deploying new app for an event&lt;/li&gt;
  &lt;li&gt;Compile to native Android app (if necessary)&lt;/li&gt;
  &lt;li&gt;Multiple views of augmented reality:
    &lt;ul&gt;
      &lt;li&gt;Tweet text becomes lexograph of video stream&lt;/li&gt;
      &lt;li&gt;Select variety of encoding for sentiments or keywords&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Welcome to annotatAR's Blog</title>
   <link href="http://arebe.github.io/annotatar/2015/08/31/welcome/"/>
   <updated>2015-08-31T00:00:00-04:00</updated>
   <id>http://arebe.github.io/2015/08/31/welcome</id>
   <content type="html">&lt;p&gt;This blog will track my progress on my ALM capstone project, annotatAR. Details about the motivation, design, and prospective schedule are part of &lt;a href=&quot;/annotatar/assets/files/ALM_Capstone_Proposal_RBoyce_v3.2.pdf&quot;&gt;the project proposal&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;some-links-to-track&quot;&gt;Some links to track:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://annotatar.xyz&quot;&gt;annotatAR live site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://slides.com/arebe/annotatarcap&quot;&gt;annotatAR design slide deck&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://canvas.harvard.edu/courses/4308&quot;&gt;Capstone design studio site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;summer-work&quot;&gt;Summer work&lt;/h3&gt;

&lt;p&gt;Over the summer, I learned a bit about &lt;a href=&quot;https://www.meteor.com/&quot;&gt;meteor.js&lt;/a&gt; and began building a version 0 of the site, which connects to the &lt;a href=&quot;https://dev.twitter.com/streaming/public&quot;&gt;Twitter API&lt;/a&gt;, grabs tweets with a particular hashtag, and displays them on top of a video feed from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia&quot;&gt;getUserMedia&lt;/a&gt;. &lt;/p&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next steps&lt;/h3&gt;

&lt;p&gt;While the most basic form of this mechanic “works,” there is much to be done in terms of styling, user interactions, and geolocation. Additionally, meta-analysis of the tweets will add layers of semantics to both the mobile site and eventually to a desktop archival version.&lt;/p&gt;
</content>
 </entry>
 

</feed>
